{"version":3,"file":"static/js/974.5fd61942.chunk.js","mappings":"mJAGMA,EAAWC,EAAAA,YAAiB,SAACC,EAAOC,GACxC,IAAOC,EAAaD,EAAbC,UAUP,OACE,iCACA,SAAC,UAAD,CAAYC,QAAQ,GAAGC,gBAAc,EAArC,qBACA,UAAC,IAAD,YACE,SAAC,SAAD,kBACA,SAAC,YAAD,CAAcC,GAAG,SAASC,KAAK,OAAOC,YAAY,SAASN,IAAKC,EAAWM,SAAU,SAACC,IAdhE,SAACA,GACzBA,EAAEC,OAAOC,MAAQF,EAAEC,OAAOC,MAAMC,QAAQ,WAAY,IAa2CC,CAAkBJ,GAX9F,SAACA,GAAqB,IAAlBK,EAAiB,uDAAP,GAC9BL,EAAEC,OAAOC,MAAMI,QAAUD,IAC1BL,EAAEC,OAAOC,MAAQF,EAAEC,OAAOC,MAAMK,OAAO,EAAGF,GAC1CG,QAAQC,IAAIT,EAAEC,OAAOC,MAAMI,SAQuFI,CAAaV,EAAE,KAAMW,UAAQ,KAC/I,SAAC,qBAAD,CAAuBd,KAAK,QAA5B,0BACA,SAAC,qBAAD,CAAuBA,KAAK,UAA5B,6CAMN,a,gIC1BMe,EAAuBtB,EAAAA,cAAoB,MACjDsB,EAAQC,YAAc,oBACtB,Q,gECKMC,GAAiBC,EAAAA,EAAAA,GAAmB,mBAAoB,CAC5DC,UAAW,SAuBPC,EAA0B3B,EAAAA,YAAiB,WAQ9CE,GAAQ,IAPT0B,EAOS,EAPTA,SACAC,EAMS,EANTA,KACAC,EAKS,EALTA,cACAC,EAIS,EAJTA,UAIS,IAFTC,GAAIN,OAEK,MAFO,MAEP,EADNzB,GACM,YACT2B,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,eAGxC,IAAMM,GAAeC,EAAAA,EAAAA,UAAQ,iBAAO,KAAK,IACzC,OAAoBC,EAAAA,EAAAA,KAAKC,EAAkBC,SAAU,CACnD1B,MAAOsB,EACPK,UAAuBH,EAAAA,EAAAA,KAAKV,GAAD,QAAC,QAC1BxB,IAAKA,GACFD,GAFsB,IAGzB8B,UAAWS,GAAAA,CAAWT,EAAWH,EAAUC,GAAQ,GAAJ,OAAOD,EAAP,YAAmBC,GAAQC,GAAiB,0BAIjGH,EAAWJ,YAAc,aACzB,MAAekB,OAAOC,OAAOf,EAAY,CACvCgB,KAAMnB,EACNoB,MAtCsB,SAAA3C,GAAK,OAAiBmC,EAAAA,EAAAA,KAAKZ,EAAgB,CACjEe,UAAuBH,EAAAA,EAAAA,KAAKS,EAAAA,GAAD,QACzBtC,KAAM,SACHN,OAoCL6C,SA9CyB,SAAA7C,GAAK,OAAiBmC,EAAAA,EAAAA,KAAKZ,EAAgB,CACpEe,UAAuBH,EAAAA,EAAAA,KAAKS,EAAAA,GAAD,QACzBtC,KAAM,YACHN","sources":["Components/Products/Forms/BookForm.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import React from 'react'\nimport { Form, InputGroup } from 'react-bootstrap'\n\nconst BookForm = React.forwardRef((props, ref) => {\n  const {weightRef} = ref\n  const filterNumbersOnly = (e) => {\n    e.target.value = e.target.value.replace(/[^.0-9]/g, '')\n  }\n  const filterLength = (e, maxLength=12) => {\n    if(e.target.value.length >= maxLength ){\n      e.target.value = e.target.value.substr(0, maxLength)\n      console.log(e.target.value.length)\n    }\n  }\n  return (\n    <>\n    <Form.Label htmlFor='' visuallyHidden>Weight</Form.Label>\n    <InputGroup>\n      <InputGroup.Text>KG</InputGroup.Text>\n      <Form.Control id='weight' type='text' placeholder='Weight' ref={weightRef} onChange={(e) => {filterNumbersOnly(e);filterLength(e,11)}} required/>\n      <Form.Control.Feedback type='valid'>Looks good!</Form.Control.Feedback>\n      <Form.Control.Feedback type='invalid'>Please insert a Weight</Form.Control.Feedback>\n    </InputGroup>\n  </>\n  )\n})\n\nexport default BookForm","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["BookForm","React","props","ref","weightRef","htmlFor","visuallyHidden","id","type","placeholder","onChange","e","target","value","replace","filterNumbersOnly","maxLength","length","substr","console","log","filterLength","required","context","displayName","InputGroupText","createWithBsPrefix","Component","InputGroup","bsPrefix","size","hasValidation","className","as","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","Provider","children","classNames","Object","assign","Text","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}