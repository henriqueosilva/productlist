{"version":3,"file":"static/js/282.f51e0f07.chunk.js","mappings":"mJAGMA,EAAUC,EAAAA,YAAiB,SAACC,EAAOC,GACvC,IAAOC,EAAWD,EAAXC,QAEP,OACE,iCACA,SAAC,UAAD,CAAYC,QAAQ,GAAGC,gBAAc,EAArC,mBACA,UAAC,IAAD,YACE,SAAC,SAAD,kBACA,SAAC,YAAD,CAAcC,GAAG,OAAOC,KAAK,SAASC,YAAY,OAAON,IAAKC,EAASM,UAAQ,KAC/E,SAAC,qBAAD,CAAuBF,KAAK,QAA5B,0BACA,SAAC,qBAAD,CAAuBA,KAAK,UAA5B,2CAMN,a,gIClBMG,EAAuBV,EAAAA,cAAoB,MACjDU,EAAQC,YAAc,oBACtB,Q,gECKMC,GAAiBC,EAAAA,EAAAA,GAAmB,mBAAoB,CAC5DC,UAAW,SAuBPC,EAA0Bf,EAAAA,YAAiB,WAQ9CE,GAAQ,IAPTc,EAOS,EAPTA,SACAC,EAMS,EANTA,KACAC,EAKS,EALTA,cACAC,EAIS,EAJTA,UAIS,IAFTC,GAAIN,OAEK,MAFO,MAEP,EADNb,GACM,YACTe,GAAWK,EAAAA,EAAAA,IAAmBL,EAAU,eAGxC,IAAMM,GAAeC,EAAAA,EAAAA,UAAQ,iBAAO,KAAK,IACzC,OAAoBC,EAAAA,EAAAA,KAAKC,EAAkBC,SAAU,CACnDC,MAAOL,EACPM,UAAuBJ,EAAAA,EAAAA,KAAKV,GAAD,QAAC,QAC1BZ,IAAKA,GACFD,GAFsB,IAGzBkB,UAAWU,GAAAA,CAAWV,EAAWH,EAAUC,GAAQ,GAAJ,OAAOD,EAAP,YAAmBC,GAAQC,GAAiB,0BAIjGH,EAAWJ,YAAc,aACzB,MAAemB,OAAOC,OAAOhB,EAAY,CACvCiB,KAAMpB,EACNqB,MAtCsB,SAAAhC,GAAK,OAAiBuB,EAAAA,EAAAA,KAAKZ,EAAgB,CACjEgB,UAAuBJ,EAAAA,EAAAA,KAAKU,EAAAA,GAAD,QACzB3B,KAAM,SACHN,OAoCLkC,SA9CyB,SAAAlC,GAAK,OAAiBuB,EAAAA,EAAAA,KAAKZ,EAAgB,CACpEgB,UAAuBJ,EAAAA,EAAAA,KAAKU,EAAAA,GAAD,QACzB3B,KAAM,YACHN","sources":["Components/Products/Forms/DvdForm.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import React from 'react'\nimport { Form, InputGroup } from 'react-bootstrap'\n\nconst DvdForm = React.forwardRef((props, ref) => {\n  const {sizeRef} = ref\n\n  return (\n    <>\n    <Form.Label htmlFor='' visuallyHidden>Size</Form.Label>\n    <InputGroup>\n      <InputGroup.Text>MB</InputGroup.Text>\n      <Form.Control id='size' type='number' placeholder='Size' ref={sizeRef} required/>\n      <Form.Control.Feedback type='valid'>Looks good!</Form.Control.Feedback>\n      <Form.Control.Feedback type='invalid'>Please insert a Size</Form.Control.Feedback>\n    </InputGroup>\n</>\n  )\n})\n\nexport default DvdForm","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["DvdForm","React","props","ref","sizeRef","htmlFor","visuallyHidden","id","type","placeholder","required","context","displayName","InputGroupText","createWithBsPrefix","Component","InputGroup","bsPrefix","size","hasValidation","className","as","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","Provider","value","children","classNames","Object","assign","Text","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}